// Sensor First Iteration
// october 3rd, 2023

#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// Define the I2C address of your LCD module
#define LCD_I2C_ADDRESS 0x27 

// Change this to your LCD's address (0x27 has been verified using a software template that has been attached in a different file.

// Initialize the LCD with the I2C address
LiquidCrystal_I2C lcd(LCD_I2C_ADDRESS, 16, 2); // Adjust the columns (16) and rows (2) as needed

// Built in I2C backpack has only four connections. VCC->5V/GND->GND/SDA and SLC to their respective ports.

const int trigPin = 4;
const int echoPin = 7;
long duration;
int distance;

void setup() {
  // Initialize the LCD
  lcd.init();

  // Turn on the backlight (if supported)
  lcd.backlight();

  // Set up the ultrasonic sensor
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  // Clear the LCD screen
  lcd.clear();
  
  // Set the cursor to the first row, first column
  lcd.setCursor(0, 0);

  // Print the uptime in seconds
  lcd.print("Uptime: ");
  lcd.print(millis() / 1000);

  // Set the cursor to the second row, first column
  lcd.setCursor(0, 1);

  // Ultrasonic sensor code
  digitalWrite(trigPin, LOW);

  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;

  // Print the distance on the LCD
  lcd.print("Distance: ");
  lcd.print(distance);
  lcd.print(" cm");

  // Set the cursor to the third row, first column
  lcd.setCursor(0, 2);

  // Additional information or actions can be added here
  // For example, you can add more sensor data or control other devices

  // Wait for a moment before updating the display again
  delay(1000);
}
